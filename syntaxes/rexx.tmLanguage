<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>rex</string>
		<string>rxj</string>
		<string>rexx</string>
		<string>rx</string>
		<string>zrx</string>
	</array>
	<key>firstLineMatch</key>
	<string>/\*.*(?i:REXX)\b</string>
	<key>foldingStartMarker</key>
	<string>(/\*|\b(do|select)\b)</string>
	<key>foldingStopMarker</key>
	<string>(\*/|\bend\b)</string>
	<key>name</key>
	<string>REXX</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.rexx</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>--</string>
			<key>end</key>
			<string>(?=$)</string>
			<key>name</key>
			<string>comment.rexx</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(['"])[01 ]+\1(?i:b)</string>
			<key>name</key>
			<string>constant.rexx</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(['"])[0-9a-fA-F ]+\1(?i:x)</string>
			<key>name</key>
			<string>constant.rexx</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(['"])</string>
			<key>end</key>
			<string>\1</string>
			<key>name</key>
			<string>string.rexx</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b[A-Za-z@#$!?_][A-Za-z@#$!?_0-9]*:</string>
			<key>name</key>
			<string>entity.name.function.rexx</string>
		</dict>
		<dict>
			<key>match</key>
			<string>([0-9]+(\.)?[0-9]*(?i:e[-+]?[0-9]+)?|[0-9]*(\.)?[0-9]+)(?i:e[-+]?[0-9]+)?\b</string>
			<key>name</key>
			<string>constant.numeric.rexx</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[0-9\.][A-Za-z0-9@#$¢.!?_]*</string>
			<key>name</key>
			<string>constant.other.rexx</string>
		</dict>
		<dict>
			<key>match</key>
			<string>([\+-/*%&amp;|()¬\\=&lt;&gt;])</string>
			<key>name</key>
			<string>keyword.operator.rexx</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:do|forever|while|until|to|by|for|end|exit|if|then|else|iterate|leave|nop|return|select|when|otherwise|call(\s+(off|on)\s+(error|failure(\s+name)?|halt))?|signal(\s+(off|on)\s+(error|failure(\s+name)?|halt|novalue|syntax))|address\s+\w+|arg|drop|interpret|numeric\s+(digits|form(\s+(scientific|engineering|value))?|fuzz)|options|parse(\s+upper)?\s+(external|numeric|source|value|var|version)?|with|procedure(\s+expose)?|pull|push|queue|say|trace\s+\w+|upper)\b(?!\.)</string>
			<key>name</key>
			<string>keyword.rexx</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b[A-Za-z@#$!?_0-9]+(?=\()</string>
			<key>name</key>
			<string>support.function.rexx</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b[A-Za-z@#$¢!?_][A-Za-z0-9@#$¢.!?_]*</string>
			<key>name</key>
			<string>variable.rexx</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.rexx</string>
	<key>uuid</key>
	<string>1ebe3dbc-ae7f-413a-990f-c37fc1b0d204</string>
</dict>
</plist>
